
import sys
import unicodedata

START, END = ord(' '), sys.maxunicode + 1


def find(*query_words, start=START, end=END):
    """
    Ищет символы Unicode, название которых содержит все заданные слова.

    Аргументы:
    query_words (tuple of str): кортеж со словами, которые нужно найти.
    start (int): код первого символа для поиска (включительно).
    end (int): код последнего символа для поиска (не включая).

    Возвращает:
    None
    """
    query = {w.upper() for w in query_words}
    print(query)
    for code in range(start, end):
        char = chr(code)
        name = unicodedata.name(char, None)
        if name and query.issubset(name.split()):

# В Python метод issubset() применяется для проверки,
# является ли одно множество подмножеством другого.
# В данном случае, name.split() представляет собой список,
# полученный путем разделения строки name по пробелам.
# Далее, метод issubset() применяется к множеству query_words,
# которое должно быть заранее определено в коде.
# Выражение query_words.issubset(name.split()) возвращает True,
# если все элементы множества query_words содержатся в списке name.split(), иначе возвращает False.
# Таким образом, данное выражение используется для проверки,
# содержит ли строка name все слова, которые указаны в множестве query_words.
# Если query_words является подмножеством name.split(), то можно сделать вывод
# , что все слова из query_words содержатся в названии символа Unicode, заданного переменной name.
            print(f"U+{code:04X}\t{char}\t{name}")

# :04X - это спецификатор формата для вывода целых чисел в шестнадцатеричном формате (X)
# с минимальной шириной поля в 4 символа.
# В данном случае, этот спецификатор используется для форматирования вывода кода символа Unicode
# в виде четырех символов шестнадцатеричного представления с ведущими нулями при необходимости.
# Например, если code = 65, то f"{code:04X}" вернет строку "0041", а если code = 40960, то f"{code:04X}"
# вернет строку "A000".
# Здесь также можно использовать другие спецификаторы формата для вывода чисел, например:
# %d - для вывода целых чисел в десятичной системе счисления
# %x - для вывода целых чисел в шестнадцатеричной системе счисления в нижнем регистре
# %X - для вывода целых чисел в шестнадцатеричной системе счисления в верхнем регистре

def main(words):
    """
    Выполняет поиск символов Unicode по заданным словам.

    Аргументы:
    words (list of str): список слов, которые нужно найти.

    Возвращает:
    None
    """
    if words:
        find(*words)
    else:
        print('Введите слово для поиска')


if __name__ == '__main__':
    main(sys.argv[1:])