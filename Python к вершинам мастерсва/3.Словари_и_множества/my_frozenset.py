
tt = (1, 2, (3, 40))
print(hash(tt))

my_set = set([1, 2, 3])
print(my_set) # {1, 2, 3}

# frozenset() в Python - это неизменяемая версия встроенного типа данных set. Он создает пустое неизменяемое множество.

# frozenset() может быть использован для создания неизменяемых множеств, которые могут быть использованы как ключи словаря, потому что неизменяемые объекты могут быть использованы как ключи, в отличие от изменяемых объектов.

# Пример использования frozenset():
my_frozen_set = frozenset([1, 2, 3])
print(my_frozen_set) # frozenset({1, 2, 3})

my_list = [1, 2, 3, 4, 5]
prmy_set = frozenset(my_list)
print(prmy_set.__eq__)
print(prmy_set)
# Функция hash() в Python используется для генерации уникального целочисленного хэш-кода для объекта.
# Хэш-код имеет фиксированную длину и является результатом выполнения математической функции на основе значений объекта.
# Хэш-коды являются полезным инструментом для быстрого сравнения объектов.
# Если два объекта эквивалентны, то они должны иметь одинаковые хэши.
# Обратное неверно - если два объекта имеют одинаковый хэш, они могут быть не эквивалентными.
# В примере выше функция hash() используется для генерации хэш-кода кортежа (1, 2, (3, 40)).
# Этот кортеж является неизменяемым объектом, поэтому он может быть хэширован.
# Результат вызова hash() будет уникальным целочисленным значением,
# которое можно использовать для сравнения этого кортежа с другими объектами,
# например, при добавлении его в словарь или множество.